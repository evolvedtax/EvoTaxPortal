@model W8BENERequest
@{
    ViewData["Title"] = "W8 BEN-E";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    /* Mark input boxes that gets an error on validation: */
    input.invalid {
        background-color: #ffdddd;
    }

    /* Hide all steps by default: */
    .tab {
        display: none;
    }

    /* Make circles that indicate the steps of the form: */
    .step {
        height: 15px;
        width: 15px;
        margin: 0 2px;
        background-color: #bbbbbb;
        border: none;
        border-radius: 50%;
        display: inline-block;
        opacity: 0.5;
    }

        /* Mark the active step: */
        .step.active {
            opacity: 1;
        }

        /* Mark the steps that are finished and valid: */
        .step.finish {
            background-color: #04AA6D;
        }

    p {
        font-size: large;
        color: white;
    }

    .text-center {
        text-align: center;
        margin-bottom: 30px;
    }

        .text-center span {
            display: inline-block;
            border-radius: 5px;
            background-color: #1AB394;
            /*width: 20%;*/
        }

            .text-center span p {
                text-align: center;
                margin: 10px;
            }

    .form-box {
        border: 1px solid #ccc;
        padding: 20px;
        border-radius: 4px;
        margin: 20px;
    }

</style>
<div class="ibox" style="margin-bottom:15%">
    <div class="ibox-content" style="border: none;">
        <div id="contentContainer"></div>
        <form id="regForm"
              method="post"
              data-ajax="true"
              data-ajax-method="post"
              data-ajax-mode="replace"
              data-ajax-failure="COMMON.ajaxfailure"
              data-ajax-loading="#ajax-loader"
              data-ajax-success="ajaxsuccess"
              data-ajax-url="@Url.Action("W8BENE","Entity")">

            <!-- One "tab" for each step in the form: -->
            <div>
                <!--General Questionare View-->
                <partial name="_generalQuestionareW8BENE" model="Model" />

            </div>
            <!-- Hidden field for isPartialSave -->
            <input type="hidden" asp-for="IsPartialSave" id="isPartialSave" value="true">
            <input type="hidden" id="activeTabIndex" name="activeTabIndex" value="" />
            <!-- Circles which indicates the steps of the form: -->
            <div id="stepsDiv" style="text-align:center;margin-top:40px;">
                <span class="step"></span>
                <span class="step"></span>
                <span class="step"></span>
            </div>
        </form>
    </div>
</div>


<div class="footer fixed" style="height:25%">
    <div style="overflow:auto;">
        <div style="float:right;">
            <button type="button" onclick="location.href='@Url.Action("GQEntity","Entity")'" id="editBtn" class="btn btn-md btn-dark" hidden> << Edit</button>
            <button type="button" id="SaveExitBtn" class="btn btn-md btn-primary">Save Progress</button>
            <button type="button" id="prevBtn" class="btn btn-md btn-dark" onclick="nextPrev(-1)"> << Previous Page</button>
            <button type="button" id="nextBtn" class="btn btn-md btn-primary" onclick="nextPrev(1)">Next Page >></button>
        </div>
    </div>
</div>
<div id="modal-form" class="modal fade" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" style="width:fit-content">
            <div class="modal-body">
                <div id="pdf_containers">
                    <canvas id="canvas2"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {

    <script type="text/javascript">


        $(document).ready(function () {


            var activeTabIndex = @Html.Raw(Json.Serialize(Model != null ? Model.activeTabIndex : "0"));
            // If activeTabIndex is not set, default to the first tab
            if (!activeTabIndex) {
                activeTabIndex = 0;
            }
            // Show the active tab and hide the others
            $(".tab").css("display", "none");
            $(".tab[data-tab-index='" + activeTabIndex + "']").css("display", "block");
        

            $("select").select2({
                theme: 'bootstrap4',
                placeholder: "Select One",
                //allowClear: true
            });
            $('.select2-container').css('width', '100%');
            //$('#Ssnitnein').attr('placeholder', '00-0000000');
            //$('#Ssnitnein').mask('00-0000000', { reverse: true });

            //-------------------//
            $('select').change();
        });
        $(window).on('load', function () {
            $('select').change();
            var checkedDEW8ECI = $("input[type='radio'][name='DEW8ECI']:checked");
            if (checkedDEW8ECI.length > 0) {
                checkedDEW8ECI.trigger("change");
            }

            var checkedCheckIfFtinNotLegallyRequiredYN = $("input[type='radio'][name='CheckIfFtinNotLegallyRequiredYNW8ECI']:checked");
            if (checkedCheckIfFtinNotLegallyRequiredYN.length > 0) {
                checkedCheckIfFtinNotLegallyRequiredYN.trigger("click");
            }

            var checkedOnBehalfName = $("input[type='radio'][name='W8ECIOnBehalfName']:checked");
            if (checkedOnBehalfName.length > 0) {
                checkedOnBehalfName.trigger("click");
            }


            //var W8FormTypecheckedRadioButton = $("input[type='radio'][name='W8FormType']:checked");
            //if (W8FormTypecheckedRadioButton.length > 0) {
            //    W8FormTypecheckedRadioButton.trigger("change");
            //}
        });
        function W8BENEOnBehalfNameFunc(obj) {
            $('#W8BENEOnBehalfNameDiv').prop('hidden', false);
            if (String(obj.value).toLowerCase() == 'true') {
                $('#lbl_authSignatory').html('Please enter the name of the authorized signatory <span class="text-danger">*</span>');
            } else {
                $('#lbl_authSignatory').html('Please enter the name of the beneficial owner <span class="text-danger">*</span>');
            }
        }
        function ShowHideFormParts(obj) {
            AllFormDivsHide();
            if (obj.value == '5') {
                $('#part3').prop('hidden', false);
            } else if (obj.value == '6') {
                $('#part4').prop('hidden', false);
            } else if (obj.value == '7') {
                $('#part5').prop('hidden', false);
            } else if (obj.value == '8') {
                $('#part6').prop('hidden', false);
            } else if (obj.value == '9') {
                $('#part7').prop('hidden', false);
            } else if (obj.value == '10') {
                $('#part8').prop('hidden', false);
            } else if (obj.value == '11') {
                $('#part9').prop('hidden', false);
            } else if (obj.value == '12') {
                $('#part10').prop('hidden', false);
            } else if (obj.value == '13') {
                $('#part11').prop('hidden', false);
            } else if (obj.value == '14') {
                $('#part12').prop('hidden', false);
            } else if (obj.value == '15') {
                $('#part13').prop('hidden', false);
            } else if (obj.value == '16') {
                $('#part14').prop('hidden', false);
            } else if (obj.value == '17') {
                $('#part15').prop('hidden', false);
            } else if (obj.value == '18') {
                $('#part16').prop('hidden', false);
            } else if (obj.value == '19') {
                $('#part17').prop('hidden', false);
            } else if (obj.value == '20') {
                $('#part18').prop('hidden', false);
            } else if (obj.value == '21') {
                $('#part19').prop('hidden', false);
            } else if (obj.value == '22') {
                $('#part20').prop('hidden', false);
            } else if (obj.value == '23') {
                $('#part21').prop('hidden', false);
            } else if (obj.value == '24') {
                $('#part22').prop('hidden', false);
            } else if (obj.value == '25') {
                $('#part23').prop('hidden', false);
            } else if (obj.value == '26') {
                $('#part24').prop('hidden', false);
            } else if (obj.value == '27') {
                $('#part25').prop('hidden', false);
            } else if (obj.value == '28') {
                $('#part26').prop('hidden', false);
            } else if (obj.value == '29') {
                $('#part27').prop('hidden', false);
            } else if (obj.value == '31') {
                $('#part28').prop('hidden', false);
            }
        }
        function _40cCheckBox(obj) {
            if (obj.value == "2") {
                $('#part29').prop('hidden', false);
            } else {
                $('#part29').prop('hidden', true);
            }
        }
        function AllFormDivsHide() {
            $('#part3').prop('hidden', true);
            $('#part4').prop('hidden', true);
            $('#part5').prop('hidden', true);
            $('#part6').prop('hidden', true);
            $('#part7').prop('hidden', true);
            $('#part8').prop('hidden', true);
            $('#part9').prop('hidden', true);
            $('#part10').prop('hidden', true);
            $('#part11').prop('hidden', true);
            $('#part12').prop('hidden', true);
            $('#part13').prop('hidden', true);
            $('#part14').prop('hidden', true);
            $('#part15').prop('hidden', true);
            $('#part16').prop('hidden', true);
            $('#part17').prop('hidden', true);
            $('#part18').prop('hidden', true);
            $('#part19').prop('hidden', true);
            $('#part20').prop('hidden', true);
            $('#part21').prop('hidden', true);
            $('#part22').prop('hidden', true);
            $('#part23').prop('hidden', true);
            $('#part24').prop('hidden', true);
            $('#part25').prop('hidden', true);
            $('#part26').prop('hidden', true);
            $('#part27').prop('hidden', true);
            $('#part28').prop('hidden', true);
            $('#part29').prop('hidden', true);
        }
        function ChangeMaskingW8ECI(obj) {

            if (obj.value == 'S') {
                $('#SsnitneinDQW8ECI').attr('placeholder', '000-00-0000');
                $('#SsnitneinDQW8ECI').mask('000-00-0000', { reverse: true });
            } else if (obj.value == 'E') {
                $('#SsnitneinDQW8ECI').attr('placeholder', '00-0000000');
                $('#SsnitneinDQW8ECI').mask('00-0000000', { reverse: true });
            } else {
                $('#SsnitneinDQW8ECI').attr('placeholder', '000-00-0000');
                $('#SsnitneinDQW8ECI').mask('000-00-0000', { reverse: true });
            }
        }
        function ShowHideFTIN(obj) {

            if (obj.value === 'false' || obj.value === 'False') {
                $('#FTINDiv').prop('hidden', true);
                $('#FTIN').val('');
            } else if (obj == 'false' || obj.value === 'False') {
                $('#FTINDiv').prop('hidden', true);
                $('#FTIN').val('');
            } else if (obj.value === 'true' || obj.value === 'True') {
                $('#FTINDiv').prop('hidden', false);
            }
            else if (obj == 'true' || obj == 'True') {
                $('#FTINDiv').prop('hidden', false);
            }
            else if (obj.value === undefined) {
                $('#FTINDiv').prop('hidden', true);
                $('#FTIN').val('');
            }
        }
        function ajaxsuccess(response) {
            if (response.message != '@AppConstants.FormPartiallySave') {
                document.getElementById("stepsDiv").style.display = "none";
                let pdfUrl = window.location.origin + '//' + response;
                // Create the object element
                var $pdfObject = $('<object>').attr({
                    data: pdfUrl,
                    type: 'application/pdf',
                    width: '100%',
                    height: '800px'
                });

                $('#contentContainer').empty();
                // Append the object element to the container
                $('#contentContainer').append($pdfObject);
                $('#editBtn').prop('hidden', false);
                $('#prevBtn').prop('hidden', true);
                $('#nextBtn').prop('hidden', true);
                $('#SaveExitBtn').prop('hidden', true);
            }
            else if (response.message == '@AppConstants.FormPartiallySave') {
                COMMON.notification(1, "Saving ...");
            }
        }
        function ShowHideProvince(obj) {
            if (obj.value == 'United States') {
                $('#provinceDiv').prop('hidden', true);
                $('#province').val('');
                $('#stateDiv').prop('hidden', false);
                $('#lblZipCode').text('Zip Code').append(`<span class="text-danger"> *</span>`);
            } else {
                $('#provinceDiv').prop('hidden', false);
                $('#stateDiv').prop('hidden', true);
                $('#state').val(1);
                $('#lblZipCode').text('Zip/Postal Code').append(`<span class="text-danger"> *</span>`);
            }
        }
        function ShowHideProvincePerm(obj) {
            if (obj.value == 'United States') {
                $('#provincePermDiv').prop('hidden', true);
                $('#provincePerm').val('');
                $('#statePermDiv').prop('hidden', false);
                $('#lblZipCodePerm').text('Zip Code').append(`<span class="text-danger"> *</span>`);
            } else {
                $('#provincePermDiv').prop('hidden', false);
                $('#statePermDiv').prop('hidden', true);
                $('#statePerm').val(1);
                $('#lblZipCodePerm').text('Zip/Postal Code').append(`<span class="text-danger"> *</span>`);
            }
        }
        function ShowHideProvince12(obj) {
            if (obj.value == 'United States') {
                $('#12_provinceDiv').prop('hidden', true);
                $('#_12_Province').val('');
                $('#12_stateDiv').prop('hidden', false);
                $('#12_lblZipCode').text('Zip Code').append(`<span class="text-danger"> *</span>`);
            } else {
                $('#12_provinceDiv').prop('hidden', false);
                $('#12_stateDiv').prop('hidden', true);
                $('#_12_State').val(1);
                $('#12_lblZipCode').text('Zip/Postal Code').append(`<span class="text-danger"> *</span>`);
            }
        }

        function HideAddress(obj) {
            if (obj.checked) {
                $('#SamePermAddressDiv').prop('hidden', true);
            } else {
                $('#SamePermAddressDiv').prop('hidden', false);
            }
        }
        var currentTab = 0; // Current tab is set to be the first tab (0)
        showTab(currentTab); // Display the current tab


        function ShowHideFTINW8BENE(obj) {
            if (String(obj.value).toLowerCase() == 'true') {
                $('#FTINW8BENEDiv').prop('hidden', false);
            } else {
                $('#FTINW8BENEDiv').prop('hidden', true);
                $('#CheckIfFtinNotLegallyRequiredYNW8BENE').val('');
            }
        }
        function W8ECIOnBehalfNameFunc(obj) {
            if (String(obj.value).toLowerCase() == 'true') {
                $('#lbl_authSignatory').html('Please enter the name of the authorized signatory <span class="text-danger">*</span>');
            } else {
                $('#lbl_authSignatory').html('Please enter the name of the beneficial owner <span class="text-danger">*</span>');
            }
        }
        function SelectDEEntity(obj) {
            if (obj.value === 'false' || obj.value === 'False') {
                $('#DEDiv').prop('hidden', true);
                $('#DEOwnerName').val('');
            } else if (obj.value === 'true' || obj.value === 'True') {
                $('#DEDiv').prop('hidden', false);
            }
        }
        function showTab(n) {
            debugger;
            var x = document.querySelectorAll('.tab:not([hidden])');
            x[n].style.display = 'block';
            var prevBtn = document.getElementById('prevBtn');
            var nextBtn = document.getElementById('nextBtn');

            if (n === 0) {
                prevBtn.disabled = true;
            } else {
                prevBtn.disabled = false;
            }
            if (n === x.length - 1) {
                nextBtn.innerHTML = 'View and Edit Form W-8BEN-E >>';
            } else {
                nextBtn.innerHTML = 'Next Page >>';
            }

            fixStepIndicator(n);
        }
        $("#SaveExitBtn").click(function () {
            let form = $('#regForm');
            if (form.valid()) {
                $('#isPartialSave').val('true');
                var activeTabIndex = $('.tab[style*="display: block"]').data('tab-index');
                $('#activeTabIndex').val(activeTabIndex);
                form.submit();
            }

        });
        function nextPrev(n) {
            var x = document.querySelectorAll('.tab:not([hidden])');
            var currentTab = 0; // Initialize currentTab to 0

            if ($('#SamePermAddress').is(':checked')) {
                //--------------------//
                $('#countryPerm').val($('#country').val()).change();
                $('#adreess1Perm').val($('#adreess1').val());
                $('#adreess2Perm').val($('#adreess2').val());
                $('#cityPerm').val($('#city').val());
                $('#provincePerm').val($('#province').val());
                $('#zipCodePerm').val($('#zipCode').val());
                $('#statePerm').val($('#state').val());
                //--------------------//
            }

            $('#contentContainer').empty();

            if (n == 1 && !$('#regForm').valid()) return false;

            currentTab = Array.from(x).findIndex((tab) => tab.style.display === 'block');
            if (currentTab >= 0) {
                x[currentTab].style.display = 'none';
            }
            currentTab += n;

            if (currentTab >= x.length) {
                let form = $('#regForm');
                if (form.valid()) {
                    $('#isPartialSave').val('false');
                    form.submit();
                }
                return false;
            }

            x.forEach((tab) => {
                tab.style.display = 'none';
            });
            x[currentTab].style.display = 'block';

            // Enable "Previous" button
            if (currentTab > 0) {
                $('#prevBtn').prop('disabled', false);
            } else {
                $('#prevBtn').prop('disabled', true);
            }
            // Otherwise, display the correct tab:
            showTab(currentTab);
        }

        function validateForm() {
            // This function deals with validation of the form fields
            var x, y, i, valid = true;
            //x = document.getElementsByClassName("tab");
            var x = document.querySelectorAll('.tab:not([hidden])');
            sp = x[currentTab].getElementsByTagName("span");
            y = x[currentTab].getElementsByTagName("input");
            z = x[currentTab].getElementsByTagName("select");
            // A loop that checks every input field in the current tab:
            for (i = 0; i < y.length; i++) {
                // If a field is empty...
                if (y[i].hasAttribute("required") && y[i].value == "") {
                    // add an "invalid" class to the field:
                    y[i].className += " invalid";
                    // and set the current valid status to false:
                    valid = false;
                }
                if (y[i].id == "socialSecurityNumber" && y[i].value.length < 11) {
                    // add an "invalid" class to the field:
                    y[i].className += " invalid";
                    // and set the current valid status to false:
                    valid = false;
                }
            }

            // A loop that checks every input field in the current tab:
            for (i = 0; i < z.length; i++) {
                // If a field is empty...
                if (z[i].hasAttribute("required") && z[i].value == "") {
                    // add an "invalid" class to the field:
                    sp[7].style.backgroundColor = "#ffdddd"
                    // and set the current valid status to false:
                    valid = false;
                }
            }
            // If the valid status is true, mark the step as finished and valid:
            if (valid) {
                // A loop that checks every input field in the current tab:
                for (i = 0; i < y.length; i++) {
                    // If a field is empty...
                    if (y[i].hasAttribute("required") && y[i].value != "") {
                        // add an "invalid" class to the field:
                        y[i].classList.remove("invalid")
                        // and set the current valid status to false:
                    }
                }

                // A loop that checks every input field in the current tab:
                for (i = 0; i < z.length; i++) {
                    // If a field is empty...
                    if (z[i].hasAttribute("required") && z[i].value != "") {
                        // add an "invalid" class to the field:
                        sp[7].style.backgroundColor = "";
                        // and set the current valid status to false:
                    }
                }
                document.getElementsByClassName("step")[currentTab].className += " finish";
            }
            return valid; // return the valid status
        }

        function fixStepIndicator(n) {
            // This function removes the "active" class of all steps...
            var i, x = document.getElementsByClassName("step");
            for (i = 0; i < x.length; i++) {
                x[i].className = x[i].className.replace(" active", "");
            }
            //... and adds the "active" class to the current step:
            x[n].className += " active";
        }
    </script>
}