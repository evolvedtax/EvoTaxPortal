@using EvolvedTax.Data.Models.DTOs.Response.Form1098;
@model IQueryable<Form1098EResponse>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutInstitute.cshtml";
}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox ">
                <div class="ibox-title">
                    <div class="row">
                        <div class="col-md-5">
                            <div style="display:flex">
                                <label class="ml-2 mr-2" style="margin:auto">Select Entity for Further Details</label>
                                <select asp-items="ViewBag.EntitiesList" class="select2 form-control" id="changeEntity" style="width:fit-content">
                                </select>
                            </div>
                        </div>
                        <div id="uploadDataDiv" class="col-md-3 mb-2 mb-2 pull-right" hidden>
                            <div style="display:flex">
                                <label class="ml-2 mr-2" style="margin:auto;width:30%">Upload Data</label>
                                <div class="input-group">
                                    <div class="custom-file">
                                        <input id="uploadClients" type="file" class="custom-file-input" accept=".xlsx, .xls">
                                        <label class="custom-file-label" for="uploadClients">Choose file</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="ibox-content">
                    <div class="table-container">
                        <div class="table-responsive">
                            <table class="table table-striped table-bordered table-hover dataTables-example">
                                <thead>
                                    <tr>
                                        <th><input type="checkbox" id="selectAll"></th>
                                        <th>Recepient TIN</th>
                                        <th>First Name</th>
                                        <th>Last Name</th>
                                        <th>Company</th>
                                        <th>Address Type</th>
                                        <th>Country</th>
                                        <th>Address Line 1</th>
                                        <th>Address Line 2</th>
                                        <th>City</th>
                                        <th>State</th>
                                        <th>Province</th>
                                        <th>Zip</th>
                                        <th>Postal Code</th>
                                        <th>Rcp Foreign TIN</th>
                                        <th>Recepient E-mail</th>
                                    
                                        <th>Corrected</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.Any())
                                    {
                                        foreach (var item in Model)
                                        {
                                            string IsDuplicatedStyle = string.Empty;
                                            @if (item.IsDuplicated) { IsDuplicatedStyle = "style=color:red"; }
                                            <tr @IsDuplicatedStyle>
                                                @*       <td><input type="checkbox" class="rowCheckbox" value="@item.Id"></td>*@
                                                <td @IsDuplicatedStyle>
                                                    <input type="checkbox" class="rowCheckbox" value="@item.Id">
                                                    @if (item.IsDuplicated)
                                                    {
                                                        <span class="fa fa-exclamation-triangle" data-toggle="tooltip" data-original-title="Duplicate Record"></span>
                                                    }
                                                </td>
                                                @*    <td><input type="checkbox" class="rowCheckbox" value="@item.Id"></td>*@
                                                <td>@item.RcpTIN</td>
                                                <td>@item.FirstName</td>
                                                <td>@item.NameLine2</td>
                                                <td>@item.LastNameCompany</td>
                                                <td>@item.AddressType</td>
                                                <td>@item.Country</td>
                                                <td>@item.AddressDelivStreet</td>
                                                <td>@item.AddressAptSuite</td>
                                                <td>@item.City</td>
                                                <td>@item.State</td>
                                                <td>@item.Province</td>
                                                <td>@item.Zip</td>
                                                <td>@item.PostalCode</td>
                                                <td>@item.RcpAccount</td>
                                                <td>@item.RcpEmail</td>
                                              
                                                <td>@item.FormSource</td>

                                                <td @IsDuplicatedStyle class="actions">
                                                    @if (item.IsDuplicated)
                                                    {
                                                        <div class="dropdown">
                                                            <button class="dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                                <span class="fa fa-bars"></span>
                                                            </button>
                                                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                                                <div class="dropdown-menu-horizontal">
                                                                    <a class="dropdown-item save-row" href="javascript:void()" onclick="COMMON.confirmAlertActive('keep','/1098/Form1098_E/KeepRecord','id=@item.Id','')">Keep</a>
                                                                    <a class="dropdown-item" href="javascript:void()" onclick="COMMON.confirmAlert('Are you sure, you want to delete this record?','/1098/Form1098_E/DeleteRecord','id=@item.Id','')">Delete</a>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="dropdown">
                                                            <button class="dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                                <span class="fa fa-bars"></span>
                                                            </button>
                                                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                                                <div class="dropdown-menu-horizontal">
                                                                    <a class="dropdown-item" href="javascript:void()" onclick="DownloadFile('@item.Id')">Download Form</a>
                                                                    <a class="dropdown-item" href="javascript:void()">E-mail to the recipient and send to IRS</a>
                                                                    <a class="dropdown-item" href="javascript:void()">File with IRS</a>
                                                                    <a class="dropdown-item" href="javascript:void()" onclick="COMMON.confirmAlert('Are you sure, you want to delete this record?','/1098/Form1098_E/DeleteRecord','id=@item.Id','')">Delete</a>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                    @*    <td>
                                            <div class="dropdown">
                                            <button class="dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <span class="fa fa-bars"></span>
                                            </button>
                                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                            <div class="dropdown-menu-horizontal">
                                            <a class="dropdown-item" href="javascript:void()" onclick="DownloadFile('@item.Id')">Download Form</a>
                                            <a class="dropdown-item" href="javascript:void()">E-mail to the recipient and send to IRS</a>
                                            <a class="dropdown-item" href="javascript:void()">File with IRS</a>
                                            </div>
                                            </div>
                                            </div>
                                            </td>*@
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <!-- Download Modal -->
                <div class="modal inmodal" id="downloadModal" tabindex="-1" role="dialog" aria-hidden="true">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content animated fadeIn">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                <h4 id="downloadModelHeader" class="modal-title"></h4>
                            </div>
                            <div class="modal-body">

                                <input id="hdnSelectedId" name="hdnSelectedId" type="hidden" />
                                <input id="hdnSelectedPages" name="hdnSelectedPages" type="hidden" />


                                <div class="col-md-12">
                                    @*<div class="mt-2">*@
                                    <label>Download Page(s)</label>
                                    <div>
                                        <input type="checkbox" id="All" class="download-checkbox" name="All" value="All">
                                        <label for="All">All Pages</label>
                                    </div>

                                    <div>
                                        <input type="checkbox" id="page2" class="download-checkbox" name="page2" value="2">
                                        <label for="page2">Internal Revenue Service Center</label>
                                    </div>
                                    <div>
                                        <input type="checkbox" id="page3" class="download-checkbox" name="page3" value="3">
                                        <label for="page3">For Borrower</label>
                                    </div>
                                    <div>
                                        <input type="checkbox" id="page5" class="download-checkbox" name="page5" value="5">
                                        <label for="page5">For Lender</label>
                                    </div>
                                    @* </div>*@
                                </div>

                                <div class="modal-footer">
                                    <button type="button" class="btn btn-white" data-dismiss="modal">Close</button>
                                    <button type="button" class="btn btn-primary" id="downloadBtn">Download All In Separate File</button>
                                    <button type="button" class="btn btn-primary" id="downloadBtnOne">Download All In One File</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $("select").select2({
                theme: 'bootstrap4',
                placeholder: "Select One",
                //allowClear: true
            });

            var table = $('.dataTables-example').DataTable({
                "order": [[0, "desc"]],
                pageLength: 25,
                fixedColumns: {
                    left: 3,
                    right: 1
                },
                fixedHeader: true,
                scrollX: true,
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    {
                        extend: 'collection',
                        text: '<i class="fa fa-ellipsis-h"></i>',
                        className: 'btn-menu-toggle',
                        buttons: [
                            {
                                text: '<i class="fa fa-download"></i> Download New Template',
                                className: 'btn-template',
                                action: function (e, dt, button, config) {
                                    let url = '@Url.Action("DownloadExcel","Common")';
                                    let params = { fileType: '@AppConstants.Form1098E' }
                                    COMMON.doAjaxToDownloadFile(url, params, '@AppConstants.Form1098EExcelTemplate');
                                }
                            },
                            ,
                            {
                                text: '<i class= "fa fa-download" ></i> Download In PDF',
                                className: 'btn-template',
                                action: function (e, dt, button, config) {
                                    // Get selected rows
                                    var selectedRows = [];
                                    $('.rowCheckbox:checked').each(function () {
                                        var checkboxValue = $(this).val();
                                        //var rowData = dt.row('#' + checkboxValue).data();

                                        if (checkboxValue) {
                                            selectedRows.push(checkboxValue);
                                        }
                                    });
                                    if (selectedRows.length === 0) {
                                        COMMON.notification(3, 'No row selected. Please select at least one row.');
                                        return;
                                    }
                                    showModalForDownload(selectedRows);

                                }
                            },
                            {
                                extend: 'excel',
                                title: 'EvolvedTax',
                                text: '<i class="fa fa-file-excel-o"></i> Export to Excel',
                                className: 'btn-excel'
                            },
                            {
                                text: '<i class="fa fa-upload"></i> Import Data',
                                className: 'btn-imp-data',
                                action: function (e, dt, button, config) {
                                    $('#uploadDataDiv').prop('hidden', false);
                                }
                            },
                            {
                                text: '<i class="fa fa-send"></i> E-mail to the recipient and send to IRS',
                                className: 'btn-imp-data',
                                action: function (e, dt, button, config) {
                                    COMMON.confirmAlertWitMessages("", "Would you like a professional at Evolved LLC to review 1098 before you file.", "", "Yes","No", "", "", "");
                                }
                            },
                            // {
                            //    text: '<i class="fa fa-send"></i> Professional Review',
                            //    className: 'btn-imp-data',
                            //    action: function (e, dt, button, config) {
                            //        COMMON.confirmAlertWitMessages("", "Would you like a professional at Evolved LLC to review 1098 before you file.", "", "Yes","No", "", "", "");
                            //    }
                            //},
                            {
                                text: '<i class="fa fa-send"></i> File with IRS',
                                className: 'btn-imp-data',
                                action: function (e, dt, button, config) {

                                }
                            },
                            {
                                text: '<i class="fa fa-send"></i> Electronic Acceptance E-mail',
                                className: 'btn-imp-data',
                                action: function (e, dt, button, config) {
                                    var selectedValues = [];
                                    $('.rowCheckbox:checked').each(function () {
                                        selectedValues.push($(this).val());
                                    });

                                    if (selectedValues.length === 0) {
                                        COMMON.notification(3, 'No row selected. Please select at least one row.');
                                        return;
                                    }

                                    $('.loading').show();
                                    // Send the selectedValues to the controller using AJAX or a form submission
                                    let url = '@Url.Action("SendLinkToRecipients","Common")';
                                    let params = { selectedValues: selectedValues, form: '@AppConstants.Form1098E' }
                                    COMMON.doAjaxPostWithJSONResponse(url, params);
                                }
                            },
                        ],
                    },
                    //{
                    //    text: 'New <i class="fa fa-plus"></i>',
                    //    className: 'new-btn',
                    //    action: function (e, dt, button, config) {
                    //        $("#addModal").modal("show");
                    //    }
                    //},
                    {
                        text: 'Share <i class="fa fa-share"></i>',
                        className: 'email-btn',
                        action: function (e, dt, button, config) {
                            $("#shareModal").modal("show");
                        }
                    },
                ],
                initComplete: function () {
                    //$('.dataTables_length').hide(); // Hide the original page length dropdown
                    $('.btn-menu-toggle').attr('data-toggle', 'tooltip').attr('data-placement', 'top').attr('data-original-title', 'Menu').tooltip();
                    // Add custom CSS class to the dropdown list container
                    $('.btn-menu-toggle').on('click', function () {
                        var dropdown = $(this).siblings('.dt-button-collection');
                        dropdown.addClass('center-dropdown');
                    });
                },
            });
            // On change the entity
            $('#changeEntity').change(function () {
                let entityId = $('#changeEntity').val();
                let params = { entityId: entityId };
                let response = COMMON.doAjaxGetWithJSONResponse('/1098/Form1098_E/ChangeEntity', params);
                window.location.href = '/1098/Form1098_E/Index';
            });
            // Get the file input element
            var fileInput = document.getElementById('uploadClients');
            // Add an event listener to the file input
            fileInput.addEventListener('change', uploadData);
            function uploadData(event) {
                let entityId = $('#changeEntity').val();
                let entityName = $('#changeEntity option:selected').text().trim();
                //COMMON.uploadFile(event, '/Form1098_E/uploadClients', { entityId, entityName });
                uploadFile(event, '/Form1098_E/uploadClients', { entityId, entityName });
            }
            bsCustomFileInput.init();
        });
        // Select All checkbox
        $('#selectAll').change(function () {
            $('.rowCheckbox:not(:disabled)').prop('checked', $(this).prop('checked'));
            var selectedValues = [];
            $('.rowCheckbox:checked').each(function () {
                selectedValues.push($(this).val());
            });
        });

        function showModalForDownload(ids) {
            // $("#hdnSelectedId").val(ids.join(","));
            $("#hdnSelectedId").val(ids);
            $("#downloadModal").modal("show");
        }

        document.addEventListener("DOMContentLoaded", function () {
            // Attach a click event listener to the "Download" button
            const downloadButton = document.getElementById("downloadBtn");
            downloadButton.addEventListener("click", function () {
                const selectedCheckboxes = $(".download-checkbox:checked");
                const selectedPages = selectedCheckboxes.map(function () {
                    return $(this).val();
                }).get();

                // Set the value of the hidden field to the selected pages
                $("#hdnSelectedPages").val(selectedPages.join(','));

                DownloadAll($("#hdnSelectedId").val(), $("#hdnSelectedPages").val());
            });
        });

        document.addEventListener("DOMContentLoaded", function () {
            // Attach a click event listener to the "Download" button
            const downloadButton = document.getElementById("downloadBtnOne");
            downloadButton.addEventListener("click", function () {
                const selectedCheckboxes = $(".download-checkbox:checked");
                const selectedPages = selectedCheckboxes.map(function () {
                    return $(this).val();
                }).get();

                // Set the value of the hidden field to the selected pages
                $("#hdnSelectedPages").val(selectedPages.join(','));

                DownloadOneAll($("#hdnSelectedId").val(), $("#hdnSelectedPages").val());
            });
        });

        function DownloadOneAll(id, selectedPages) {
            const ids = id.split(',');
            const selectedPage = selectedPages.split(',');
            const timestamp = new Date().getTime();
            const formattedDate = new Date(timestamp).toLocaleDateString(); // Format the timestamp as date only
            const zipFolderName = `F1098A_${formattedDate}.zip`;
            $('#ajax-loader').show();
            $("#downloadModal").modal("hide");
            fetch("@Url.Action("DownloadOneFile")", {
                method: "POST",
                headers: {
                    "content-type": "application/json"
                },
                body: JSON.stringify({ ids, selectedPage })
            })
                .then((response) => {
                    response.blob().then((blob) => {
                        const downloadUrl = window.URL.createObjectURL(blob);
                        const link = document.createElement('a');
                        link.setAttribute('href', downloadUrl);
                        link.setAttribute('download', zipFolderName);
                        link.style.display = 'none';
                        document.body.appendChild(link);
                        link.click();
                        window.URL.revokeObjectURL(link.href);
                        document.body.removeChild(link);

                        $('#ajax-loader').hide();

                    })
                });
        }




        function DownloadAll(id, selectedPages) {
            debugger;
            const ids = id.split(',');
            const selectedPage = selectedPages.split(',');
            const timestamp = new Date().getTime();
            const formattedDate = new Date(timestamp).toLocaleDateString(); // Format the timestamp as date only
            const zipFolderName = `F1098A_${formattedDate}.zip`;

            $('#ajax-loader').show();
            $("#downloadModal").modal("hide");
            fetch("@Url.Action("DownloadAll")", {
                method: "POST",
                headers: {
                    "content-type": "application/json"
                },
                body: JSON.stringify({ ids, selectedPage })
            })
                .then((response) => {
                    response.blob().then((blob) => {
                        const downloadUrl = window.URL.createObjectURL(blob);
                        const link = document.createElement('a');
                        link.setAttribute('href', downloadUrl);
                        link.setAttribute('download', zipFolderName);
                        link.style.display = 'none';
                        document.body.appendChild(link);
                        link.click();
                        window.URL.revokeObjectURL(link.href);
                        document.body.removeChild(link);

                        $('#ajax-loader').hide();

                    })
                });
        }

        // Individual row checkbox
        $('.rowCheckbox').change(function () {
            if ($('.rowCheckbox:checked').length == $('.rowCheckbox').length) {
                $('#selectAll').prop('checked', true);
            } else {
                $('#selectAll').prop('checked', false);
                var selectedValues = [];
                $('.rowCheckbox:checked').each(function () {
                    selectedValues.push($(this).val());
                });
            }
        });
        function DownloadFile(id) {
            var response = COMMON.doAjaxGetWithJSONResponse("Form1098_E/downlodPdf", { Id: id })
            window.open(response);
        }
        function sen() {

        }

        function ConfirmForProfessionalReview(confirmTitle, confirmMessage, confirmType, confirmBtnText, url, params, gridId) {
            var confirmed = false;

            swal({
                title: confirmTitle, //"Are you sure to delete this record?",
                text: confirmMessage, // "Please check before deleting the record!",
                type: confirmType, //"warning",
                showCancelButton: true,
                confirmButtonColor: "#1ab394",
                confirmButtonText: confirmBtnText,
                cancelButtonText: "Reject"
            },
                function (isConfirm) {
                    if (isConfirm) {

                        confirmed = true;
                    } else {
                        swal("Cancelled", "You have cancelled delete operation!", "error");
                        //return false;
                    }
                });
            return confirmed;
        };

        function uploadFile(event, url, obj) {
            var file = event.target.files[0]; // Get the selected file
            if (file == undefined) {
                return;
            }
            // Create a new XMLHttpRequest object
            var xhr = new XMLHttpRequest();

            // Set up the AJAX request
            xhr.open('POST', url, true);
            // Create a FormData object and append the file to it
            var formData = new FormData();
            formData.append('file', file);
            formData.append('EntityId', obj.entityId); // Here obj is Entity Id
            formData.append('entityName', obj.entityName); // Here obj is Entity Id


            $('#ajax-loader').show();
            xhr.onload = function () {
                if (xhr.status === 200) {
                    // File upload successful
                    console.log('File uploaded successfully');
                    $('#ajax-loader').hide();
                    window.location.reload();
                    // Check the response from the server
                    var response = JSON.parse(xhr.responseText);
                    if (response.Status) {
                        if (response.Param == "Entity" && response.Message.length > 0) {

                        }
                        console.log('Upload completed successfully');
                    } else {
                        // Continue showing the progress bar until completion record is received
                        COMMON.AlertSuccessMessage(response.Message.Title, response.Message.TagLine, 'error')
                    }
                } else {
                    // File upload failed
                    console.log('File upload failed');
                }
            };

            // Send the AJAX request
            xhr.send(formData);


        }
    </script>
}