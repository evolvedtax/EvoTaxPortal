@model FormRequest
@{
    ViewData["Title"] = "General Questions";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    /* Mark input boxes that gets an error on validation: */
    input.invalid {
        background-color: #ffdddd;
    }

    /* Hide all steps by default: */
    .tab {
        display: none;
    }

    /* Make circles that indicate the steps of the form: */
    .step {
        height: 15px;
        width: 15px;
        margin: 0 2px;
        background-color: #bbbbbb;
        border: none;
        border-radius: 50%;
        display: inline-block;
        opacity: 0.5;
    }

        /* Mark the active step: */
        .step.active {
            opacity: 1;
        }

        /* Mark the steps that are finished and valid: */
        .step.finish {
            background-color: #04AA6D;
        }

    p {
        font-size: large;
        color: white;
    }

    .text-center {
        text-align: center;
        margin-bottom: 30px;
    }

        .text-center span {
            display: inline-block;
            border-radius: 5px;
            background-color: #1AB394;
            /*width: 20%;*/
        }

            .text-center span p {
                text-align: center;
                margin: 10px;
            }

    .form-box {
        border: 1px solid #ccc;
        padding: 20px;
        border-radius: 4px;
        margin: 20px;
    }
</style>
<div class="ibox" style="margin-bottom:15%">
    <div class="ibox-content" style="border: none;">
        <div id="contentContainer"></div>
        <form id="regForm"
              method="post"
              data-ajax="true"
              data-ajax-method="post"
              data-ajax-mode="replace"
              data-ajax-failure="COMMON.ajaxfailure"
              data-ajax-loading="#ajax-loader"
              data-ajax-success="ajaxsuccess"
              data-ajax-url="@Url.Action("GQIndividual","Individual")">

            <!-- One "tab" for each step in the form: -->
            <div>

                <!--General Questionare View-->
                <partial name="_generalQuestionare" model="Model" />

                <!--W8 BEN Questionare View-->
                <partial name="_w8BenQuestionare" model="Model" />

                <!--W8 ECI Questionare View-->
                <partial name="_w8ECIQuestionare" model="Model" />
            </div>

            <!-- Circles which indicates the steps of the form: -->
            <div id="stepsDiv" style="text-align:center;margin-top:40px;">
                <span class="step"></span>
                <span class="step"></span>
                <span class="step"></span>
                <span class="step"></span>
            </div>
        </form>
    </div>
</div>


<div class="footer fixed" style="height:25%">
    <div style="overflow:auto;">
        <div style="float:right;">
            <button type="button" onclick="location.href='@Url.Action("GQIndividual","Individual")'" id="editBtn" class="btn btn-md btn-dark" hidden> << Edit</button>
            <button type="button" id="prevBtn" class="btn btn-md btn-dark" onclick="nextPrev(-1)"> << Previous Page</button>
            <button type="button" id="nextBtn" class="btn btn-md btn-primary" onclick="nextPrev(1)">Next Page >></button>
        </div>
    </div>
</div>
<div id="modal-form" class="modal fade" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" style="width:fit-content">
            <div class="modal-body">
                <div id="pdf_containers">
                    <canvas id="canvas2"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {

    <script type="text/javascript">

        $(document).ready(function () {
            $("select").select2({
                theme: 'bootstrap4',
                placeholder: "Select One",
                //allowClear: true
            });
            // Get the current date
            var currentDate = new Date().toISOString().split('T')[0];
            // Set the max attribute of the date input
            $('#dateOfBirthW8Ben').attr('max', currentDate);
            $('#dateOfBirthW8ECI').attr('max', currentDate);
            //-------------------//
            $('select').change();
            var checkedRadioButton = $("input[type='radio'][name='FormType']:checked");
            if (checkedRadioButton.length > 0) {
                checkedRadioButton.trigger("click");
            }
            var checkedRadioButtonW8From = $("input[type='radio'][name='W8FormType']:checked");
            if (checkedRadioButtonW8From.length > 0) {
                checkedRadioButtonW8From.trigger("click");
            }
            $('#CitizenshipW8Ben').find("option[value='United States']").remove();
            $('#CitizenshipW8ECI').find("option[value='United States']").remove();
        });
        $(window).on('load', function () {
            $('select').change();
            var checkedRadioButton = $("input[type='radio'][name='FormType']:checked");
            if (checkedRadioButton.length > 0) {
                checkedRadioButton.trigger("click");
            }
            var checkedRadioButtonW8From = $("input[type='radio'][name='W8FormType']:checked");
            if (checkedRadioButtonW8From.length > 0) {
                checkedRadioButtonW8From.trigger("click");
            }
        });
        function ajaxsuccess(response) {
            document.getElementById("stepsDiv").style.display = "none";
            let pdfUrl = window.location.origin + '//' + response;
            // Create the object element
            var $pdfObject = $('<object>').attr({
                data: pdfUrl,
                type: 'application/pdf',
                width: '100%',
                height: '800px'
            });

            $('#contentContainer').empty();
            // Append the object element to the container
            $('#contentContainer').append($pdfObject);
            $('#editBtn').prop('hidden', false);
            $('#prevBtn').prop('hidden', true);
            $('#nextBtn').prop('hidden', true);
        }
        function ShowHideProvince(obj) {
            if (obj.value == 'United States') {
                $('#provinceDiv').prop('hidden', true);
                $('#province').val('');
                $('#stateDiv').prop('hidden', false);
                $('#lblZipCode').text('Zip Code').append(`<span class="text-danger"> *</span>`);
            } else {
                $('#provinceDiv').prop('hidden', false);
                $('#stateDiv').prop('hidden', true);
                $('#state').val(1);
                $('#lblZipCode').text('Zip/Postal Code').append(`<span class="text-danger"> *</span>`);
            }
        }
        function ShowHideFTIN(obj) {
            if (obj.value == 'true') {
                $('#FTINDiv').prop('hidden', false);
            } else {
                $('#FTINDiv').prop('hidden', true);
                $('#FTIN').val('');
            }
        }
        function ShowHideFTINW8ECI(obj) {
            if (obj.value == 'true') {
                $('#FTINW8ECIDiv').prop('hidden', false);
            } else {
                $('#FTINW8ECIDiv').prop('hidden', true);
                $('#FTINW8ECI').val('');
            }
        }
        function ShowHideProvincePerm(obj) {
            if (obj.value == 'United States') {
                $('#provincePermDiv').prop('hidden', true);
                $('#provincePerm').val('');
                $('#statePermDiv').prop('hidden', false);
                $('#lblZipCodePerm').text('Zip Code').append(`<span class="text-danger"> *</span>`);
            } else {
                $('#provincePermDiv').prop('hidden', false);
                $('#statePermDiv').prop('hidden', true);
                $('#statePerm').val(1);
                $('#lblZipCodePerm').text('Zip/Postal Code').append(`<span class="text-danger"> *</span>`);
            }
        }

        function HideAddress(obj) {
            if (obj.checked) {
                $('#SamePermAddressDiv').prop('hidden', true);
            } else {
                $('#SamePermAddressDiv').prop('hidden', false);
            }
        }
        var currentTab = 0; // Current tab is set to be the first tab (0)
        showTab(currentTab); // Display the current tab

        function SelectForm(obj) {
            if (obj.value == '@AppConstants.W8Form') {
                $('#W8FormDiv').prop('hidden', false);
                $('#W8BenQuestionareDiv').prop('hidden', false);
                $("#Citizenship").find("option[value='United States']").remove();
                $("#Citizenship").prop('disabled', false).trigger("change");
                // Uncheck all radio buttons within the group
                $("input[type='radio'][name='W8FormType']").prop('checked', false);
                // Remove span and required attributes
                $('#lbl_TypeofTaxNumber span').remove();
                $('#Ssnitnein').removeAttr('required');
                $('input[name="TypeofTaxNumber"]').removeAttr('required');
            } else {
                $('#W8FormDiv').prop('hidden', true);
                $('#W8BenQuestionareDiv').prop('hidden', true);
                $('#W8ECIQuestionareDiv').prop('hidden', true);
                // Check if "United States" already exists in the select list
                if ($("#Citizenship option[value='United States']").length === 0) {
                    var newOption = $("<option>").val("United States").text("United States");
                    $("#Citizenship").prepend(newOption).trigger("change");
                }
                $("#Citizenship").val('United States').trigger('change');
                $('#inlineRadio5').prop('checked', true);
                if ($('#inlineRadio5').is(':checked')) {
                    // Disable the other radio buttons
                    //$('#inlineRadio6, #inlineRadio7').prop('disabled', true);
                    $('#Ssnitnein').attr('placeholder', '000-00-0000');
                    $('#Ssnitnein').mask('000-00-0000', { reverse: true });
                }
                // Add span and required attributes
                //$('#lbl_TypeofTaxNumber').append('<span class="text-danger">*</span>');
                $('#Ssnitnein').attr('required', 'required');
                $('input[name="TypeofTaxNumber"]').attr('required', 'required');
            }
            showTab(currentTab);
        }
        function ChangeMasking(obj) {
            if (obj.value == 'S') {
                $('#Ssnitnein').attr('placeholder', '000-00-0000');
                $('#Ssnitnein').mask('000-00-0000', { reverse: true });
            } else if (obj.value == 'E') {
                $('#Ssnitnein').attr('placeholder', '00-0000000');
                $('#Ssnitnein').mask('00-0000000', { reverse: true });
            } else {
                $('#Ssnitnein').attr('placeholder', '000-00-0000');
                $('#Ssnitnein').mask('000-00-0000', { reverse: true });
            }
        }
        function ShowHideW8(obj) {
            if (obj.value == '@AppConstants.W8BENForm') {
                $('#W8BenQuestionareDiv').prop('hidden', false);
                $('#W8ECIQuestionareDiv').prop('hidden', true);
            } else {
                $('#W8BenQuestionareDiv').prop('hidden', true);
                $('#W8ECIQuestionareDiv').prop('hidden', false);
            }
            showTab(currentTab);
        }
        function W8BENOnBehalfNameFunc(obj) {
            if (obj.value == 'True') {
                $('#W8BENOnBehalfNameQuesDiv').prop('hidden', false);
            } else {
                $('#W8BENOnBehalfNameQuesDiv').prop('hidden', true);
                $('#PrintNameOfSigner').val('');
            }
        }
        function W8ECIOnBehalfNameFunc(obj) {
            if (String(obj.value).toLowerCase() == 'true') {
                $('#W8ECIOnBehalfNameQuesDiv').prop('hidden', false);
            } else {
                $('#W8ECIOnBehalfNameQuesDiv').prop('hidden', true);
                $('#PrintNameOfSignerW8ECI').val('');
            }
        }
        function showTab(n) {
            // This function will display the specified tab of the form ...
            var x = document.querySelectorAll('.tab:not([hidden])');

            x[n].style.display = "block";
            // ... and fix the Previous/Next buttons:
            if (n == 0) {
                document.getElementById("prevBtn").style.display = "none";
            } else {
                document.getElementById("prevBtn").style.display = "inline";
            }
            if (n == (x.length - 1)) {
                if ($("input[type='radio'][name='FormType']:checked").val() == '@AppConstants.W8Form') {
                    var checkedRadioButton = $("input[type='radio'][name='W8FormType']:checked");
                    if (checkedRadioButton.val() == '@AppConstants.W8BENForm') {
                        $('#firstNameW8Ben').val($('#firstName').val());
                        $('#lastNameW8Ben').val($('#lastName').val());
                        $('#CitizenshipW8Ben').val($('#Citizenship').val());
                        $('#socialSecurityNumberW8Ben').val($('#socialSecurityNumber').val());
                        document.getElementById("nextBtn").innerHTML = "View and Edit Form W-8BEN >>";
                    } else {
                        $('#firstNameW8ECI').val($('#firstName').val());
                        $('#lastNameW8ECI').val($('#lastName').val());
                        $('#CitizenshipW8ECI').val($('#Citizenship').val()).change();
                        $('#socialSecurityNumberW8ECI').val($('#socialSecurityNumber').val());
                        document.getElementById("nextBtn").innerHTML = "View and Edit Form W-8ECI >>";
                    }
                } else {
                    document.getElementById("nextBtn").innerHTML = "Preview and Sign Form W-9 >>";
                }
            } else {
                document.getElementById("nextBtn").innerHTML = "Next Page >>";
            }
            // ... and run a function that displays the correct step indicator:
            fixStepIndicator(n)
        }

        function nextPrev(n) {

            // This function will figure out which tab to display
            // var x = document.getElementsByClassName("tab");
            var x = document.querySelectorAll('.tab:not([hidden])');

            if ($('#SamePermAddress').is(':checked')) {
                //--------------------//
                $('#countryPerm').val($('#country').val()).change();
                $('#adreess1Perm').val($('#adreess1').val());
                $('#adreess2Perm').val($('#adreess2').val());
                $('#cityPerm').val($('#city').val());
                $('#provincePerm').val($('#province').val());
                $('#zipCodePerm').val($('#zipCode').val());
                $('#statePerm').val($('#state').val());
                //--------------------//
            }
            $('#contentContainer').empty();
            // Exit the function if any field in the current tab is invalid:
            //if (n == 1 && !validateForm()) return false;
            if (n == 1 && !$('#regForm').valid()) return false;
            if (currentTab < x.length) {
                // Hide the current tab:
                x[currentTab].style.display = "none";
                // Increase or decrease the current tab by 1:
            }
            currentTab = currentTab + n;
            // if you have reached the end of the form... :
            if (currentTab >= x.length) {

                //...the form gets submitted:
                // document.getElementById("regForm").submit();
                let form = $('#regForm');
                if (form.valid()) {
                    $("#Citizenship").prop('disabled', false);
                    form.submit();
                }
                return false;
            }

            // Otherwise, display the correct tab:
            showTab(currentTab);
        }

        function validateForm() {
            // This function deals with validation of the form fields
            var x, y, i, valid = true;
            //x = document.getElementsByClassName("tab");
            var x = document.querySelectorAll('.tab:not([hidden])');
            sp = x[currentTab].getElementsByTagName("span");
            y = x[currentTab].getElementsByTagName("input");
            z = x[currentTab].getElementsByTagName("select");
            // A loop that checks every input field in the current tab:
            for (i = 0; i < y.length; i++) {
                // If a field is empty...
                if (y[i].hasAttribute("required") && y[i].value == "") {
                    // add an "invalid" class to the field:
                    y[i].className += " invalid";
                    // and set the current valid status to false:
                    valid = false;
                }
                if (y[i].id == "socialSecurityNumber" && y[i].value.length < 11) {
                    // add an "invalid" class to the field:
                    y[i].className += " invalid";
                    // and set the current valid status to false:
                    valid = false;
                }
            }

            // A loop that checks every input field in the current tab:
            for (i = 0; i < z.length; i++) {
                // If a field is empty...
                if (z[i].hasAttribute("required") && z[i].value == "") {
                    // add an "invalid" class to the field:
                    sp[7].style.backgroundColor = "#ffdddd"
                    // and set the current valid status to false:
                    valid = false;
                }
            }
            // If the valid status is true, mark the step as finished and valid:
            if (valid) {
                // A loop that checks every input field in the current tab:
                for (i = 0; i < y.length; i++) {
                    // If a field is empty...
                    if (y[i].hasAttribute("required") && y[i].value != "") {
                        // add an "invalid" class to the field:
                        y[i].classList.remove("invalid")
                        // and set the current valid status to false:
                    }
                }

                // A loop that checks every input field in the current tab:
                for (i = 0; i < z.length; i++) {
                    // If a field is empty...
                    if (z[i].hasAttribute("required") && z[i].value != "") {
                        // add an "invalid" class to the field:
                        sp[7].style.backgroundColor = "";
                        // and set the current valid status to false:
                    }
                }
                document.getElementsByClassName("step")[currentTab].className += " finish";
            }
            return valid; // return the valid status
        }

        function fixStepIndicator(n) {
            // This function removes the "active" class of all steps...
            var i, x = document.getElementsByClassName("step");
            for (i = 0; i < x.length; i++) {
                x[i].className = x[i].className.replace(" active", "");
            }
            //... and adds the "active" class to the current step:
            x[n].className += " active";
        }
    </script>
}