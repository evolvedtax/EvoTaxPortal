@using EvolvedTax;
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" href="~/evolved_tax_mark_logo.ico">
    <title>@ViewData["Title"] - EvoForms</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <META HTTP-EQUIV=”refresh” CONTENT=”.0; URL=nobackpage.html”>
    <!-- Add local styles, mostly for plugins css file -->
    @if (IsSectionDefined("Styles"))
    {
        @RenderSection("Styles", required: false)
    }

    <environment names="Development">
        <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="~/lib/font-awesome/css/font-awesome.css" />
        <link rel="stylesheet" href="~/css/animate.css" />
        <link rel="stylesheet" href="~/css/style.css" asp-append-version="true" />
        <link href="~/lib/dataTables/datatables.min.css" rel="stylesheet">
        <link href="https://cdn.datatables.net/fixedcolumns/4.3.0/css/fixedColumns.dataTables.min.css" rel="stylesheet">
        <link href="https://cdn.datatables.net/fixedheader/3.4.0/css/fixedHeader.dataTables.min.css" rel="stylesheet">
        <link href="~/lib/sweetalert/dist/sweetalert.css" rel="stylesheet">
        <link href="~/lib/select2/dist/css/select2.min.css" rel="stylesheet">
        <link href="~/lib/select2/dist/css/select2-bootstrap4.min.css" rel="stylesheet">
        <link href="~/lib/bootstrap-datepicker/datepicker3.css" rel="stylesheet">
        <link href="~/lib/ionRangeSlider/ion.rangeSlider.css" rel="stylesheet">
        <link rel="stylesheet" href="~/lib/iCheck/custom.css" />
        <link rel="stylesheet" href="~/lib/steps/jquery.steps.css" />
        <link rel="stylesheet" href="~/css/loader.css" />
        <link rel="stylesheet" href="~/lib/iziToast/dist/css/iziToast.min.css" />
        <link rel="stylesheet" href="~/lib/bootstrap-tagsinput/bootstrap-tagsinput.css" />
        <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.20/dist/sweetalert2.min.css" rel="stylesheet" />
        <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.9/signalr.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.20/dist/sweetalert2.all.min.js"></script>
    </environment>
    <environment names="Staging,Production">
        <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="~/lib/font-awesome/css/font-awesome.css" />
        <link rel="stylesheet" href="~/css/animate.css" />
        <link rel="stylesheet" href="~/css/style.css" asp-append-version="true" />
        <link href="~/lib/dataTables/datatables.min.css" rel="stylesheet">
        <link href="https://cdn.datatables.net/fixedcolumns/4.3.0/css/fixedColumns.dataTables.min.css" rel="stylesheet">
        <link href="https://cdn.datatables.net/fixedheader/3.4.0/css/fixedHeader.dataTables.min.css" rel="stylesheet">
        <link href="~/lib/sweetalert/dist/sweetalert.css" rel="stylesheet">
        <link href="~/lib/select2/dist/css/select2.min.css" rel="stylesheet">
        <link href="~/lib/select2/dist/css/select2-bootstrap4.min.css" rel="stylesheet">
        <link href="~/lib/bootstrap-datepicker/datepicker3.css" rel="stylesheet">
        <link href="~/lib/ionRangeSlider/ion.rangeSlider.css" rel="stylesheet">
        <link rel="stylesheet" href="~/lib/iCheck/custom.css" />
        <link rel="stylesheet" href="~/lib/steps/jquery.steps.css" />
        <link rel="stylesheet" href="~/css/loader.css" />
        <link rel="stylesheet" href="~/lib/iziToast/dist/css/iziToast.min.css" />
        <link rel="stylesheet" href="~/lib/bootstrap-tagsinput/bootstrap-tagsinput.css" />
    </environment>
    <style>
    

        #alertDropdown li {
            padding: 10px;
            border-bottom: 1px solid #e9e9e9;
        }
    /* Hover effect */
            #alertDropdown li:hover {
                background-color: #f2f2f2; /* Change to any color you prefer for the hover effect */
                cursor: pointer; /* Change cursor to a pointer when hovering over the alert item */
            }

        #alertAnnouncement a {
            color: inherit;
            text-decoration: none;
        }

        #alertAnnouncement li {
            padding: 10px;
            border-bottom: 1px solid #e9e9e9;
        }

            /* Hover effect */
            #alertAnnouncement li:hover {
                background-color: #f2f2f2; /* Change to any color you prefer for the hover effect */
                cursor: pointer; /* Change cursor to a pointer when hovering over the alert item */
            }

        .btn-excel {
            background-color: #384a50;
            border-color: white;
            color: white;
        }

        .btn-template{
            background-color: #384a50;
            border-color: white;
            color: white;
        }

        .btn-imp-data {
            background-color: #384a50;
            border-color: white;
            color: white;
        }

        .email-btn{
            background-color: #1ab394;
            border-color: #1ab394;
            color: white;
        }

        .btn-recycle-bin{
            background-color: #384a50;
            border-color: white;
            color: white;
        }
        .btn-empty-recycle-bin{
            background-color: #384a50;
            border-color: white;
            color: white;
        }

        .btn-menu-toggle {
            background-color: #384a50;
            border-color: white;
            color: white;
        }

        .nav-link {
            /*border: 1px solid transparent !important;*/
            border-top-left-radius: 1rem !important;
            border-top-right-radius: 1rem !important;
        }

        .nav-tabs > li > a {
            color: #A7B1C2 !important;
            font-weight: 600;
            padding: 10px 20px 10px 25px;
        }
        .left-nav-links{
            border-radius: 1rem;
            width: 96%;
        }

            .table td {
                border-radius: 1rem;
            border-color: #1ab394
        }
        table thead th {
            border-radius: 1rem;
            border-color: #1ab394
        }

        .ibox-title {
            /*box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);*/
            border-top-left-radius: 1rem;
            border-top-right-radius: 1rem;
        }

        .ibox-content {
            /*box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);*/
            border-bottom-left-radius: 1rem;
            border-bottom-right-radius: 1rem;
        }

        .minimalize-styl-2{
            border-radius: 0.75rem;
        }

    </style>

</head>
<body class="pace-running">
    <partial name="_busyIndicator" />
    <!-- Skin configuration box -->
    <!-- <partial name="_SkinConfig" /> -->
    <!-- Wrapper-->
    <div id="wrapper" class="@Html.PageClass()">

        <!-- Navigation -->
        <partial name="_Navigation" />

        <!-- Page wraper -->
        <div id="page-wrapper" class="gray-bg @ViewBag.SpecialClass">

            <!-- Top Navbar -->
            <partial name="_TopNavbarInstitiute" />
        @*    <partial name="_Testing" />
*@
            <!-- Main view  -->
            @RenderBody()

            <!-- Footer -->
            @*<partial name="_Footer" />*@

        </div>
        <!-- End page wrapper-->
        <!-- Right Sidebar -->
        @*<partial name="_RightSidebar" />*@

    </div>
    <!-- End wrapper-->
    @RenderSection("toast", required: false)

    <environment names="Development">
        @*<script src="~/lib/jquery/dist/jquery.min.js"></script>*@
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.9.2/umd/popper.min.js" integrity="sha512-2rNj2KJ+D8s1ceNasTIex6z4HWyOnEYLVC3FigGOmyQCZc2eBXKgOxQmo3oKLHyfcj53uz4QMsRCWNbLd32Q1g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
        <script src="~/lib/Popper/popper.min.js"></script>
        <script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
        <script src="~/lib/metisMenu/dist/jquery.metisMenu.js"></script>
        <script src="~/lib/pace/pace.min.js"></script>
        <script src="~/lib/slimScroll/jquery.slimscroll.min.js"></script>
        <script src="~/js/script.js" asp-append-version="true"></script>
        <script src="~/lib/dataTables/datatables.min.js"></script>
        <script src="https://cdn.datatables.net/fixedcolumns/4.3.0/js/dataTables.fixedColumns.min.js"></script>
        <script src="https://cdn.datatables.net/fixedheader/3.4.0/js/dataTables.fixedHeader.min.js"></script>
        <script src="~/lib/sweetalert/dist/sweetalert.min.js"></script>
        <script src="~/lib/iziToast/dist/js/iziToast.min.js"></script>
        <script src="~/lib/validate/jquery.validate.min.js"></script>
        <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
        <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
        <script src="~/lib/jquery-ajax-unobtrusive/jquery.unobtrusive-ajax.min.js"></script>
        <script src="~/lib/ionRangeSlider/ion.rangeSlider.min.js"></script>
        <script src="~/lib/clockpicker/clockpicker.js"></script>
        <!-- Select2 -->
        <script src="~/lib/select2/dist/js/select2.full.min.js"></script>
        <script src="~/lib/bootstrap-datepicker/bootstrap-datepicker.js"></script>
        <script src="~/js/common.js"></script>
        <script src="~/lib/iCheck/icheck.min.js"></script>
        <script src="~/lib/dataTables/datatables.min.js"></script>
        <script src="~/lib/jqueryMask/jquery.mask.min.js"></script>
        <script src="~/lib/bs-custom-file/bs-custom-file-input.min.js"></script>
        <script src="~/lib/bootstrap-tagsinput/bootstrap-tagsinput.js"></script>

    </environment>
    <environment names="Staging,Production">
        @*<script src="~/lib/jquery/dist/jquery.min.js"></script>*@
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.9.2/umd/popper.min.js" integrity="sha512-2rNj2KJ+D8s1ceNasTIex6z4HWyOnEYLVC3FigGOmyQCZc2eBXKgOxQmo3oKLHyfcj53uz4QMsRCWNbLd32Q1g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
        <script src="~/lib/Popper/popper.min.js"></script>
        <script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
        <script src="~/lib/metisMenu/dist/jquery.metisMenu.js"></script>
        <script src="~/lib/pace/pace.min.js"></script>
        <script src="~/lib/slimScroll/jquery.slimscroll.min.js"></script>
        <script src="~/js/script.js" asp-append-version="true"></script>
        <script src="~/lib/dataTables/datatables.min.js"></script>
        <script src="https://cdn.datatables.net/fixedcolumns/4.3.0/js/dataTables.fixedColumns.min.js"></script>
        <script src="https://cdn.datatables.net/fixedheader/3.4.0/js/dataTables.fixedHeader.min.js"></script>
        <script src="~/lib/sweetalert/dist/sweetalert.min.js"></script>
        <script src="~/lib/iziToast/dist/js/iziToast.min.js"></script>
        <script src="~/lib/validate/jquery.validate.min.js"></script>
        <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
        <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
        <script src="~/lib/jquery-ajax-unobtrusive/jquery.unobtrusive-ajax.min.js"></script>
        <script src="~/lib/ionRangeSlider/ion.rangeSlider.min.js"></script>
        <script src="~/lib/clockpicker/clockpicker.js"></script>
        <!-- Select2 -->
        <script src="~/lib/select2/dist/js/select2.full.min.js"></script>
        <script src="~/lib/bootstrap-datepicker/bootstrap-datepicker.js"></script>
        <script src="~/js/common.js"></script>
        <script src="~/lib/iCheck/icheck.min.js"></script>
        <script src="~/lib/dataTables/datatables.min.js"></script>
        <script src="~/lib/jqueryMask/jquery.mask.min.js"></script>
        <script src="~/lib/bs-custom-file/bs-custom-file-input.min.js"></script>
        <script src="~/lib/bootstrap-tagsinput/bootstrap-tagsinput.js"></script>

    </environment>
    <script>
        $('[data-toggle="tooltip"]').tooltip();
        function displayBusyIndicator() {
            $('.loading').show();
        }
        $(window).on('beforeunload', function () {
            displayBusyIndicator();
        });

        
        function updateNewAlertCount(count) {
         $('#newAlertCount').text(count);
        }

        function updateNewAnnouncementCount(count) {
            $('#newAnnouncementCount').text(count);
        }
        

        function markFirstTwoAlertsAsRead() {
            // Select the first two alert items 
            var $alertsToMarkAsRead = $('#alertDropdown li:lt(2)');
            $alertsToMarkAsRead.each(function () {
                var alertId = $(this).data('alertid');
                if (alertId) {
                    // Mark the alert as read
                    markAlertAsRead(alertId);
                }
            });
        }

        // Function to mark a single alert as read when clicked
        function markAlertAsRead(alertId) {
            $.ajax({
                url: '/Account/MarkAlertAsRead',
                method: 'POST',
                data: { alertId: alertId },
                dataType: 'json',
                success: function (response) {
                    if (response.success) {
                        // The alert marked as read, refresh the alert list
                        loadAlerts();
                    }
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        }


        function loadAnnouncement() {
            $.ajax({
                url: '/Account/GetAnnouncements',
                method: 'GET',
                dataType: 'json',
                success: function (response) {
                    // Clear the dropdown
                    $('#alertAnnouncement').empty();

                    if (response.length === 0) {
                        var $noAlertsItem = $('<li>No New Announcement</li>');
                        $('#alertAnnouncement').append($noAlertsItem);
                        $('#newAnnouncementCount').hide();
                    } else {
                        // Limit the number of alerts to be displayed
                        var maxAlertsToShow = 2;
                        var displayedAlertsCount = 0;
                        var newAnnouncementCount = response.length;
                        $('#newAnnouncementCount').show();
                        updateNewAnnouncementCount(newAnnouncementCount);

                        for (var i = 0; i < response.length && displayedAlertsCount < maxAlertsToShow; i++) {
                            var alertItem = response[i];
                            var alertId = alertItem.Id;

                            // Calculate the time difference between the current date and alert date
                            var currentDate = new Date();
                            var alertDate = new Date(alertItem.CreatedDate);
                            var timeDifference = Math.floor((currentDate - alertDate) / (1000 * 60)); // Time difference in minutes

                            // Generate the timestamp based on the time difference
                            var timestamp;
                            if (timeDifference < 60) {
                                timestamp = `${timeDifference}m ago`;
                            } else if (timeDifference < 1440) {
                                timestamp = `${Math.floor(timeDifference / 60)}h ago`;
                            } else {
                                var options = { hour: '2-digit', minute: '2-digit', month: '2-digit', day: '2-digit', year: 'numeric' };
                                timestamp = alertDate.toLocaleString(undefined, options);
                            }


                            var $alertLi = $('<li></li>');
                            var $alertDiv = $('<div class="dropdown-messages-box"></div>');
                            var $alertMediaBody = $('<div class="media-body"></div>');
                            var $alertStrong = $('<strong></strong>').text(alertItem.Title);
                            var $alertSmall = $('<small class="float-right"></small>').text(timestamp);

                            var maxCharacters = 50;
                            var message = alertItem.Message;

                            // Check if the message length exceeds the character limit
                            if (message.length > maxCharacters) {
                                message = message.substring(0, maxCharacters) + "...";
                            }
                            var $alertContent = $('<div></div>').text(message);

                            $alertMediaBody.append($alertStrong, $alertSmall, $alertContent);


                            $alertDiv.append($alertMediaBody);
                            $alertLi.append($alertDiv);


                            // Append the alert item to the dropdown
                            $('#alertAnnouncement').append($alertLi);

                            var $alertLink = $('<a></a>').attr('href', '/Announcement/ViewAnnouncement?id=' + alertId);

                            $alertLink.append($alertLi); // Append the list item to the anchor tag
                            $('#alertAnnouncement').append($alertLink); // Append the anchor tag to the list

                            displayedAlertsCount++;
                        }

                        // Add the "See More" link if there are more alerts to show
                        if (response.length > displayedAlertsCount) {
                            var $seeMoreLink = $('<li><a href="#" id="seeMoreLink">Read All</a></li>');
                            $seeMoreLink.on('click', function (e) {
                                e.preventDefault();
                                window.location.href = '/Dashboard/Index';

                            });

                            $('#alertAnnouncement').append($seeMoreLink);
                        }
                    }
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        }

        function loadAlerts() {
            $.ajax({
                url: '/Account/GetAlertsNotification',
                method: 'GET',
                dataType: 'json',
                success: function (response) {
                    // Clear the dropdown
                    $('#alertDropdown').empty();

                    if (response.length === 0) {
                        var $noAlertsItem = $('<li>No New Alert</li>');
                        $('#alertDropdown').append($noAlertsItem);
                        $('#newAlertCount').hide();
                    } else {
                        // Limit the number of alerts to be displayed
                        var maxAlertsToShow = 2;
                        var displayedAlertsCount = 0;
                        var newAlertCount = response.length;
                        $('#newAlertCount').show();
                        updateNewAlertCount(newAlertCount);

                        for (var i = 0; i < response.length && displayedAlertsCount < maxAlertsToShow; i++) {
                            var alertItem = response[i];
                            var alertId = alertItem.Id;


                            // Calculate the time difference between the current date and alert date
                            var currentDate = new Date();
                            var alertDate = new Date(alertItem.CreatedDate);
                            var timeDifference = Math.floor((currentDate - alertDate) / (1000 * 60)); // Time difference in minutes

                            // Generate the timestamp based on the time difference
                            var timestamp;
                            if (timeDifference < 60) {
                                timestamp = `${timeDifference}m ago`;
                            } else if (timeDifference < 1440) {
                                timestamp = `${Math.floor(timeDifference / 60)}h ago`;
                            } else {
                                var options = { hour: '2-digit', minute: '2-digit', month: '2-digit', day: '2-digit', year: 'numeric' };
                                timestamp = alertDate.toLocaleString(undefined, options);
                            }


                            var $alertLi = $('<li></li>');
                            var $alertDiv = $('<div class="dropdown-messages-box"></div>');
                            var $alertMediaBody = $('<div class="media-body"></div>');
                            var $alertStrong = $('<strong></strong>').text(alertItem.Title);
                            var $alertSmall = $('<small class="float-right"></small>').text(timestamp);
                            var $alertContent = $('<div></div>').text(alertItem.AlertText);

                            $alertMediaBody.append($alertStrong, $alertSmall, $alertContent);


                            $alertDiv.append($alertMediaBody);
                            $alertLi.append($alertDiv);

                            // Add the data attribute for the alertId
                            $alertLi.data('alertid', alertId);

                            // Add event handler for clicking on an alert item
                            $alertLi.on('click', function () {
                                var alertId = $(this).data('alertid'); // Get the alertId from the data attribute
                                if (alertId) {
                                    // Mark the alert as read when clicked
                                    markAlertAsRead(alertId);
                                }
                            });


                            // Append the alert item to the dropdown
                            $('#alertDropdown').append($alertLi);

                            displayedAlertsCount++;
                        }

                        // Add the "See More" link if there are more alerts to show
                        if (response.length > displayedAlertsCount) {
                            var $seeMoreLink = $('<li><a href="#" id="seeMoreLink">Read All</a></li>');
                            $seeMoreLink.on('click', function (e) {
                                e.preventDefault();

                                // Mark all alerts as read and redirect to dashboard
                                markAllAlertsAsReadAndRedirect();
                            });

                            $('#alertDropdown').append($seeMoreLink);
                        }
                    }
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        }

        $(document).ready(function () {
        

 
            loadAlerts();
            loadAnnouncement();
           // setInterval(loadAlerts, 30000); // 30000 milliseconds = 30 seconds

            $(document).on('click', function (event) {
                // Check if the clicked element is outside the alertDropdown
                if (!$(event.target).closest('#alertDropdown').length) {
                    // Mark the first two items as read
                    markFirstTwoAlertsAsRead();
                }
            });


        });
    

        // Function to mark all alerts as read
        function markAllAlertsAsReadAndRedirect() {
            $.ajax({
                url: '/Account/MarkAllAlertsAsRead', 
                method: 'POST',
                dataType: 'json',
                success: function (response) {
                    if (response.success) {
                        // All alerts marked as read, redirect to dashboard
                        window.location.href = '/Dashboard/Index';
                    }
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        }
    

    </script>
  
@*    <script>
        Object.defineProperty(WebSocket, 'OPEN', { value: 1 });
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/announcementHub")
            .build();

        // List to store announcements received through SignalR
        const signalRAnnouncements = [];


        connection.on("ReceiveAnnouncement", function (message) {
            console.log("Received announcement:", message);
            // Add the received announcement to the SignalR list
            signalRAnnouncements.push(message);
            displaySignalRAnnouncements();
        });

        connection.start()
            .catch(err => console.error(err));

        // Function to display SignalR announcements as alerts using SweetAlert
        function displaySignalRAnnouncements() {
            if (signalRAnnouncements.length > 0) {
                const message = signalRAnnouncements.shift();
                // Show announcement using SweetAlert
                Swal.fire({
                    title: "New Announcement",
                    text: message,
                    icon: "info",
                    timer: 60000, // Auto close after 1 minute 
                    timerProgressBar: true,
                    showConfirmButton: true// Show close button to allow manual close
          
                }).then(() => {
                    // Schedule the next notification after a delay (e.g., 1 minute)
                    setTimeout(displaySignalRAnnouncements, 60000);
                });
            }
        }
    </script>*@
    @RenderSection("Scripts", required: false)
</body>
</html>
