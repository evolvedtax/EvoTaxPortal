@model IQueryable<InstituteClientResponse>
@{
    ViewData["Title"] = "Client";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .dropdown-menu-horizontal {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
    }

        .dropdown-menu-horizontal .dropdown-item {
            white-space: nowrap;
            margin-right: 10px;
        }
</style>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox ">
                <div class="ibox-title">
                    <div class="row">
                        <div class="col-md-4">
                            <label>Select Entity for Further Details</label>
                            <select asp-items="ViewBag.EntitiesList" class="select2 form-control" id="changeEntity">
                            </select>
                        </div>
                        <div id="uploadDataDiv" class="col-md-4 pull-right" hidden>
                            <label>Upload Data</label>
                            <div class="input-group">
                                <div class="custom-file">
                                    <input id="uploadClients" type="file" class="custom-file-input" accept=".xlsx, .xls">
                                    <label class="custom-file-label" for="uploadClients">Choose file</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="ibox-content">
                    @* <div class="col-md-12 row">
                    <div><input id="importData" type="button" class="btn btn-dark" value="Import Client Data" /></div>
                    <div class="ml-1"><input id="sendEmail" type="button" class="btn btn-primary email-btn" value="Send Email" /></div>
                    </div>*@
                    <table id="entity-table" class="table table-striped table-bordered table-hover dataTables-example">
                        <thead>
                            <tr>
                                <th><input type="checkbox" id="selectAll"></th>
                                <th>Partner Name</th>
                                <th>Address</th>
                                <th>City</th>
                                <th>State</th>
                                <th>Province (If Applicable)</th>
                                <th>Zip/Postal Code</th>
                                <th>Country</th>
                                <th>Phone Number</th>
                                <th>Email Address</th>
                                <th>Status</th>
                                <th>Form Completion Date</th>
                                <th>Form Name</th>
                                <th>Form Completed</th>
                                <th>Status</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Any())
                            {
                                foreach (var item in Model)
                                {
                                    string status = string.Empty;
                                    @if (item.ClientStatus == AppConstants.ClientStatusFormSubmitted) { status = "disabled"; }
                                    <tr>
                                        <td><input type="checkbox" class="rowCheckbox" value="@item.ClientId" @status></td>
                                        <td>@string.Concat(item.PartnerName1," ", item.PartnerName2)</td>
                                        <td>@string.Concat(item.Address1," ", item.Address2)</td>
                                        <td>@item.City</td>
                                        <td>@item.State</td>
                                        <td>@item.Province</td>
                                        <td>@item.Zip</td>
                                        <td>@item.Country</td>
                                        <td>@item.PhoneNumber</td>
                                        <td>@item.ClientEmailId</td>
                                        <td>@item.StatusName</td>
                                        <td>@item.ClientStatusDate?.ToString("MM-dd-yyyy")</td>
                                        <td>@string.Concat("Form"," ",item.FormName)</td>
                                        <td><a href="~/@item.FileName">@item.FileName</a></td>
                                        <td class="text-center">
                                            @if (item?.IsLocked ?? false)
                                            {
                                                <span class="fa fa-lock"></span>
                                            }
                                            else
                                            {
                                                <span class="fa fa-unlock"></span>
                                            }
                                        </td>
                                        <td class="actions">
                                            <div class="dropdown">
                                                <button class="dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    <span class="fa fa-bars"></span>
                                                </button>
                                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                                    <div class="dropdown-menu-horizontal">
                                                        @if (item?.IsLocked ?? false)
                                                        {
                                                            <a class="dropdown-item" href="javascript:void()" onclick="COMMON.confirmAlertActive('Unlock','LockUnlockClient',{clientId:'@item?.ClientId',isLocked:'false'})">Unlock</a>
                                                        }
                                                        else
                                                        {
                                                            <a class="dropdown-item edit-row" href="javascript:void()" data-toggle="modal" data-target="#editModal" data-row-id="@item?.ClientId">Edit</a>
                                                            <a class="dropdown-item" href="javascript:void()" onclick="COMMON.confirmAlert('Are you sure, you want to delete this record?','DeleteClient','id=@item?.ClientId','')">Delete</a>
                                                            <a class="dropdown-item" href="javascript:void()" onclick="COMMON.confirmAlertActive('Lock','LockUnlockClient',{clientId:'@item?.ClientId',isLocked:'false'})">Lock</a>
                                                        }
                                                        <a class="dropdown-item" href="javascript:void()">Send Email</a>
                                                    </div>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
                <div id="dupplication-ibox" class="ibox-content" hidden>
                    <h3>Dupplicate Records</h3>
                    <table id="entity-table-dupplication" class="table table-striped table-bordered table-hover dataTables-example-1">
                        <thead>
                            <tr>
                                <th><input type="checkbox" id="selectAll"></th>
                                <th>Partner Name</th>
                                <th>Address</th>
                                <th>City</th>
                                <th>State</th>
                                <th>Province (If Applicable)</th>
                                <th>Zip/Postal Code</th>
                                <th>Country</th>
                                <th>Phone Number</th>
                                <th>Email Address</th>
                                <th>Status</th>
                                <th>Form Completion Date</th>
                                <th>Form Name</th>
                                <th>Form Completed</th>
                            </tr>
                        </thead>
                        <tbody>
                           <tr>
                               <td></td>
                               <td></td>
                               <td></td>
                               <td></td>
                               <td></td>
                               <td></td>
                               <td></td>
                               <td></td>
                               <td></td>
                               <td></td>
                               <td></td>
                               <td></td>
                               <td></td>
                               <td></td>
                           </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Modal -->
<div class="modal inmodal" id="editModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content animated fadeIn">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Edit Entity</h4>
            </div>
            <div class="modal-body">
                <!-- Form for editing row data -->
                @*<form id="regForm"
                      method="post"
                      data-ajax="true"
                      data-ajax-method="post"
                      data-ajax-mode="replace"
                      data-ajax-failure="COMMON.ajaxfailure"
                      data-ajax-loading="#ajax-loader"
                      data-ajax-success="ajaxsuccess"
                      data-ajax-url="@Url.Action("UpdateClient","Institute")">
                    <!-- Add input fields here for each column you want to edit -->
                    <input id="entityId" name="EntityId" hidden />
                    <div class="row col-md-12">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="enitytName">Entity Name<span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="enitytName" name="EntityName" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="ein">EIN<span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="ein" name="Ein" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="entityRegistrationDate">Entity Registration Date<span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="entityRegistrationDate" name="EntityRegistrationDate" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="country">Country<span class="text-danger">*</span></label>
                                <select id="country" asp-items="ViewBag.CountriesList" name="Country" onChange="ShowHideProvince(this)" required>
                                    <option></option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="address1">Address 1<span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="address1" name="Address1" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="address2">Address 2</label>
                                <input type="text" class="form-control" id="address2" name="Address2">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="city">City<span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="city" name="City" required>
                            </div>
                        </div>
                        <div id="stateDiv" class="col-md-6">
                            <div class="form-group">
                                <label for="state">State</label>
                                <select id="state" asp-items="ViewBag.StatesList" name="State">
                                    <option></option>
                                </select>
                            </div>
                        </div>
                        <div id="provinceDiv" class="col-md-6" hidden>
                            <div class="form-group">
                                <label for="province">Province</label>
                                <input type="text" class="form-control" id="province" name="Province" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label id="lblZipCode" for="zip">Zip</label>
                                <input type="text" class="form-control" id="zip" name="Zip" required>
                            </div>
                        </div>
                    </div>
                </form>*@
                <div class="modal-footer">
                    <button type="button" class="btn btn-white" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="saveBtn">Save changes</button>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {

    <script type="text/javascript">
        // Upgrade button class name
        $.fn.dataTable.Buttons.defaults.dom.button.className = 'btn btn-white btn-sm';
        $(document).ready(function () {
            $("select").select2({
                theme: 'bootstrap4',
                placeholder: "Select One",
                //allowClear: true
            });
            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });
            $('.dataTables-example').DataTable({
                pageLength: 25,
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    {
                        text: 'Download New Client Template',
                        className: 'btn-template',
                        action: function (e, dt, button, config) {
                            let url = 'DownloadExcel';
                            let params = { fileType: '@AppConstants.Client' }
                            COMMON.doAjaxToDownloadFile(url, params, '@AppConstants.InstituteClientTemplate');
                        }
                    },
                    { extend: 'excel', title: 'ExampleFile', text: 'Export to Excel', className: 'btn-excel' },
                    {
                        text: 'Import Client Data',
                        className: 'btn-imp-data',
                        action: function (e, dt, button, config) {
                            $('#uploadDataDiv').prop('hidden', false);
                        }
                    }, {
                        text: 'Send Email',
                        className: 'email-btn',
                        action: function (e, dt, button, config) {
                            var selectedValues = [];
                            $('.rowCheckbox:checked').each(function () {
                                selectedValues.push($(this).val());
                            });

                            if (selectedValues.length === 0) {
                                COMMON.notification(3, 'No row selected. Please select at least one row.');
                                return;
                            }

                            $('.loading').show();
                            // Send the selectedValues to the controller using AJAX or a form submission
                            let params = { selectedValues: selectedValues }
                            COMMON.doAjaxPostWithJSONResponse('/Institute/SendEmail', params);
                        }
                    },
                ],
                initComplete: function () {
                    $('.dataTables_length').hide(); // Hide the original page length dropdown
                }
            });

            $('#importData').click(function () {
                $('#uploadDataDiv').prop('hidden', false);
            });

            $('#sendEmail').click(function () {
                var selectedValues = [];
                $('.rowCheckbox:checked').each(function () {
                    selectedValues.push($(this).val());
                });

                if (selectedValues.length === 0) {
                    COMMON.notification(3, 'No row selected. Please select at least one row.');
                    return;
                }

                $('.loading').show();
                // Send the selectedValues to the controller using AJAX or a form submission
                let params = { selectedValues: selectedValues }
                COMMON.doAjaxPostWithJSONResponse('/Institute/SendEmail', params);
            });
            // Select All checkbox
            $('#selectAll').change(function () {
                $('.rowCheckbox:not(:disabled)').prop('checked', $(this).prop('checked'));
                $('.email-btn').text('Send Email to All');
                var selectedValues = [];
                $('.rowCheckbox:checked').each(function () {
                    selectedValues.push($(this).val());
                });
                if (selectedValues.length === 0) {
                    $('.email-btn').text('Send Email');
                }
            });

            // Individual row checkbox
            $('.rowCheckbox').change(function () {
                if ($('.rowCheckbox:checked').length == $('.rowCheckbox').length) {
                    $('#selectAll').prop('checked', true);
                    $('.email-btn').text('Send Email to All');
                } else {
                    $('#selectAll').prop('checked', false);
                    $('.email-btn').text('Send Email to Selected');
                    var selectedValues = [];
                    $('.rowCheckbox:checked').each(function () {
                        selectedValues.push($(this).val());
                    });
                    if (selectedValues.length === 0) {
                        $('.email-btn').text('Send Email');
                    }
                }
            });

            $('#changeEntity').change(function () {
                let entityId = $('#changeEntity').val();
                let params = { entityId: entityId };
                let response = COMMON.doAjaxGetWithJSONResponse('/Institute/ChangeEntity', params);

                // Clear the existing table rows
                let dataTable = $('#entity-table').DataTable();
                dataTable.clear().draw();

                // Iterate over the response data and populate the table
                $.each(response, function (index, item) {
                    let ClientStatus = '';
                    if (item.ClientStatus == '@AppConstants.ClientStatusFormSubmitted') {
                        ClientStatus = 'disabled';
                    }
                    let status = '';
                    if (item.ClientStatus == '@AppConstants.ClientStatusActive') {
                        status = '<span class="fa fa-unlock"></span>';
                    } else {
                        status = '<span class="fa fa-lock"></span>';
                    }
                    let row = [
                        '<input type="checkbox" class="rowCheckbox" value="' + item.ClientId + '"' + ClientStatus + '>',
                        item.PartnerName1 + ' ' + item.PartnerName2,
                        item.Address1 + ' ' + item.Address2,
                        item.City,
                        item.State,
                        item.Province,
                        item.Zip,
                        item.Country,
                        item.PhoneNumber,
                        item.ClientEmailId,
                        item.StatusName,
                        COMMON.GetDateMMddyyyFormat(item.ClientStatusDate),
                        'Form' + ' ' + item.FormName,
                        '<a href="~/' + item.FileName + '">' + item.FileName + '</a>',
                        status
                    ];
                    dataTable.rows.add([row]);
                });

                // Draw the updated DataTable
                dataTable.draw();
            });

            // Get the file input element
            var fileInput = document.getElementById('uploadClients');
            // Add an event listener to the file input
            fileInput.addEventListener('change', uploadData);
            function uploadData(event) {
                let entityId = $('#changeEntity').val();
                COMMON.uploadFile(event, '/Institute/uploadClients', entityId);
                $('#changeEntity').change();
            }
            bsCustomFileInput.init();
        });
    </script>
}