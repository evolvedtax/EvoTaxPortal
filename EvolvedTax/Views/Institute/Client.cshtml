@model IQueryable<InstituteClientResponse>
@{
    ViewData["Title"] = "Client";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox ">
                <div class="ibox-title">
                    <div class="row">
                        <div class="col-md-4">
                            <label>Select Entity for Further Details</label>
                            <select asp-items="ViewBag.EntitiesList" class="select2 form-control" id="changeEntity">
                            </select>
                        </div>
                        <div id="uploadDataDiv" class="col-md-4 pull-right" hidden>
                            <label>Upload Data</label>
                            <div class="input-group">
                                <div class="custom-file">
                                    <input id="uploadClients" type="file" class="custom-file-input" accept=".xlsx, .xls">
                                    <label class="custom-file-label" for="uploadClients">Choose file</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="ibox-content">
                    @* <div class="col-md-12 row">
                    <div><input id="importData" type="button" class="btn btn-dark" value="Import Client Data" /></div>
                    <div class="ml-1"><input id="sendEmail" type="button" class="btn btn-primary email-btn" value="Send Email" /></div>
                    </div>*@
                    <table id="entity-table" class="table table-striped table-bordered table-hover dataTables-example">
                        <thead>
                            <tr>
                                <th><input type="checkbox" id="selectAll"></th>
                                <th>Partner Name</th>
                                <th>Address</th>
                                <th>City</th>
                                <th>State</th>
                                <th>Province (If Applicable)</th>
                                <th>Zip/Postal Code</th>
                                <th>Country</th>
                                <th>Phone Number</th>
                                <th>Email Address</th>
                                <th>Status</th>
                                <th>Form Completion Date</th>
                                <th>Form Name</th>
                                <th>Form Completed</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Any())
                            {
                                foreach (var item in Model)
                                {
                                    string status = string.Empty;
                                    @if (item.ClientStatus == AppConstants.ClientStatusFormSubmitted) { status = "disabled"; }
                                    <tr>
                                        <td><input type="checkbox" class="rowCheckbox" value="@item.ClientId" @status></td>
                                        <td>@string.Concat(item.PartnerName1," ", item.PartnerName2)</td>
                                        <td>@string.Concat(item.Address1," ", item.Address2)</td>
                                        <td>@item.City</td>
                                        <td>@item.State</td>
                                        <td>@item.Province</td>
                                        <td>@item.Zip</td>
                                        <td>@item.Country</td>
                                        <td>@item.PhoneNumber</td>
                                        <td>@item.ClientEmailId</td>
                                        <td>@item.StatusName</td>
                                        <td>@item.ClientStatusDate?.ToString("MM-dd-yyyy")</td>
                                        <td>@string.Concat("Form"," ",item.FormName)</td>
                                        <td><a href="~/@item.FileName">@item.FileName</a></td>
                                        <td class="text-center">
                                            @if (item.ClientStatus == AppConstants.ClientStatusActive)
                                            {
                                                <span class="fa fa-unlock"></span>
                                            }
                                            else
                                            {
                                                <span class="fa fa-lock"></span>
                                            }
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
                <div id="dupplication-ibox" class="ibox-content" hidden>
                    <h3>Dupplicate Records</h3>
                    <table id="entity-table-dupplication" class="table table-striped table-bordered table-hover dataTables-example-1">
                        <thead>
                            <tr>
                                <th><input type="checkbox" id="selectAll"></th>
                                <th>Partner Name</th>
                                <th>Address</th>
                                <th>City</th>
                                <th>State</th>
                                <th>Province (If Applicable)</th>
                                <th>Zip/Postal Code</th>
                                <th>Country</th>
                                <th>Phone Number</th>
                                <th>Email Address</th>
                                <th>Status</th>
                                <th>Form Completion Date</th>
                                <th>Form Name</th>
                                <th>Form Completed</th>
                            </tr>
                        </thead>
                        <tbody>
                           <tr>
                               <td></td>
                               <td></td>
                               <td></td>
                               <td></td>
                               <td></td>
                               <td></td>
                               <td></td>
                               <td></td>
                               <td></td>
                               <td></td>
                               <td></td>
                               <td></td>
                               <td></td>
                               <td></td>
                           </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

</div>
@section Scripts {

    <script type="text/javascript">
        // Upgrade button class name
        $.fn.dataTable.Buttons.defaults.dom.button.className = 'btn btn-white btn-sm';
        $(document).ready(function () {
            $("select").select2({
                theme: 'bootstrap4',
                placeholder: "Select One",
                //allowClear: true
            });
            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });
            $('.dataTables-example').DataTable({
                pageLength: 25,
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    {
                        text: 'Download New Client Template',
                        className: 'btn-template',
                        action: function (e, dt, button, config) {
                            let url = 'DownloadExcel';
                            let params = { fileType: '@AppConstants.Client' }
                            COMMON.doAjaxToDownloadFile(url, params, '@AppConstants.InstituteClientTemplate');
                        }
                    },
                    { extend: 'excel', title: 'ExampleFile', text: 'Export to Excel', className: 'btn-excel' },
                    {
                        text: 'Import Client Data',
                        className: 'btn-imp-data',
                        action: function (e, dt, button, config) {
                            $('#uploadDataDiv').prop('hidden', false);
                        }
                    }, {
                        text: 'Send Email',
                        className: 'email-btn',
                        action: function (e, dt, button, config) {
                            var selectedValues = [];
                            $('.rowCheckbox:checked').each(function () {
                                selectedValues.push($(this).val());
                            });

                            if (selectedValues.length === 0) {
                                COMMON.notification(3, 'No row selected. Please select at least one row.');
                                return;
                            }

                            $('.loading').show();
                            // Send the selectedValues to the controller using AJAX or a form submission
                            let params = { selectedValues: selectedValues }
                            COMMON.doAjaxPostWithJSONResponse('/Institute/SendEmail', params);
                        }
                    },
                ],
                initComplete: function () {
                    $('.dataTables_length').hide(); // Hide the original page length dropdown
                }
            });

            $('#importData').click(function () {
                $('#uploadDataDiv').prop('hidden', false);
            });

            $('#sendEmail').click(function () {
                var selectedValues = [];
                $('.rowCheckbox:checked').each(function () {
                    selectedValues.push($(this).val());
                });

                if (selectedValues.length === 0) {
                    COMMON.notification(3, 'No row selected. Please select at least one row.');
                    return;
                }

                $('.loading').show();
                // Send the selectedValues to the controller using AJAX or a form submission
                let params = { selectedValues: selectedValues }
                COMMON.doAjaxPostWithJSONResponse('/Institute/SendEmail', params);
            });
            // Select All checkbox
            $('#selectAll').change(function () {
                $('.rowCheckbox:not(:disabled)').prop('checked', $(this).prop('checked'));
                $('.email-btn').text('Send Email to All');
                var selectedValues = [];
                $('.rowCheckbox:checked').each(function () {
                    selectedValues.push($(this).val());
                });
                if (selectedValues.length === 0) {
                    $('.email-btn').text('Send Email');
                }
            });

            // Individual row checkbox
            $('.rowCheckbox').change(function () {
                if ($('.rowCheckbox:checked').length == $('.rowCheckbox').length) {
                    $('#selectAll').prop('checked', true);
                    $('.email-btn').text('Send Email to All');
                } else {
                    $('#selectAll').prop('checked', false);
                    $('.email-btn').text('Send Email to Selected');
                    var selectedValues = [];
                    $('.rowCheckbox:checked').each(function () {
                        selectedValues.push($(this).val());
                    });
                    if (selectedValues.length === 0) {
                        $('.email-btn').text('Send Email');
                    }
                }
            });

            $('#changeEntity').change(function () {
                let entityId = $('#changeEntity').val();
                let params = { entityId: entityId };
                let response = COMMON.doAjaxGetWithJSONResponse('/Institute/ChangeEntity', params);

                // Clear the existing table rows
                let dataTable = $('#entity-table').DataTable();
                dataTable.clear().draw();

                // Iterate over the response data and populate the table
                $.each(response, function (index, item) {
                    let ClientStatus = '';
                    if (item.ClientStatus == '@AppConstants.ClientStatusFormSubmitted') {
                        ClientStatus = 'disabled';
                    }
                    let status = '';
                    if (item.ClientStatus == '@AppConstants.ClientStatusActive') {
                        status = '<span class="fa fa-unlock"></span>';
                    } else {
                        status = '<span class="fa fa-lock"></span>';
                    }
                    let row = [
                        '<input type="checkbox" class="rowCheckbox" value="' + item.ClientId + '"' + ClientStatus + '>',
                        item.PartnerName1 + ' ' + item.PartnerName2,
                        item.Address1 + ' ' + item.Address2,
                        item.City,
                        item.State,
                        item.Province,
                        item.Zip,
                        item.Country,
                        item.PhoneNumber,
                        item.ClientEmailId,
                        item.StatusName,
                        COMMON.GetDateMMddyyyFormat(item.ClientStatusDate),
                        'Form' + ' ' + item.FormName,
                        '<a href="~/' + item.FileName + '">' + item.FileName + '</a>',
                        status
                    ];
                    dataTable.rows.add([row]);
                });

                // Draw the updated DataTable
                dataTable.draw();
            });

            // Get the file input element
            var fileInput = document.getElementById('uploadClients');
            // Add an event listener to the file input
            fileInput.addEventListener('change', uploadData);
            function uploadData(event) {
                let entityId = $('#changeEntity').val();
                COMMON.uploadFile(event, '/Institute/uploadClients', entityId);
                $('#changeEntity').change();
            }
            bsCustomFileInput.init();
        });
    </script>
}